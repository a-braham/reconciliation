// Generated by diesel_ext

#![allow(unused)]
#![allow(clippy::all)]

use diesel::prelude::*;
use serde::{Serialize, Deserialize};
use chrono::DateTime;
use chrono::offset::Utc;

use crate::schema::transactions;

#[derive(Debug, Deserialize, AsChangeset)]
#[diesel(table_name = transactions)]
pub struct UpdateTransaction {
    pub reconciliation_state: Option<bool>,
    pub reconciliation_comment: Option<String>,
    pub reconciliation_date: Option<String>,
}


#[derive(Queryable, Debug, Serialize)]
pub struct Transaction {
    pub id: i32,
    pub user_id: Option<i64>,
    pub group_id: Option<i32>,
    pub phone_number: Option<String>,
    pub type_: Option<String>,
    pub purpose: Option<String>,
    pub comment: Option<String>,
    pub amount: Option<f64>,
    pub external_transaction_id: Option<String>,
    pub status: Option<String>,
    pub created_at: DateTime<Utc>,
    pub updated_at: DateTime<Utc>,
    pub provider_name: Option<String>,
    pub initiator_id: Option<i32>,
    pub payments_gateway_response_status: Option<i32>,
    pub payments_retrial: Option<i32>,
    pub category: Option<String>,
    pub parent_transaction_id: Option<i32>,
    pub request_id: Option<i64>,
    pub amount_with_interest: Option<f64>,
    pub month: Option<String>,
    pub provider_reference_id: Option<String>,
    pub member_balance_before: Option<f64>,
    pub member_balance_after: Option<f64>,
    pub group_balance_after: Option<f64>,
    pub group_balance_before: Option<f64>,
    pub updated_from: Option<String>,
    pub date: Option<i32>,
    pub year_month: Option<i32>,
    pub year: Option<i16>,
    pub today: Option<bool>,
    pub cleared_shares_manually: Option<bool>,
    pub week: Option<i16>,
    pub narration: Option<String>,
    pub organization_id: Option<i32>,
    pub org_wallet_id: Option<i32>,
    pub attachment: Option<String>,
    pub charge: Option<f64>,
    pub from: Option<String>,
    pub commissions: Option<f64>,
    pub commissions_beneficiary_user_id: Option<i32>,
    pub commissions_type: Option<String>,
    pub to: Option<String>,
    pub project_id: Option<i32>,
    pub is_first_transaction: Option<bool>,
    pub org_loan_balance: Option<f64>,
    pub wallet_organization_id: Option<i32>,
    pub affected_group_savings_balance: Option<bool>,
    pub affected_member_savings_balance: Option<bool>,
    pub affected_user_wallet: Option<bool>,
    pub affected_float_wallet: Option<bool>,
    pub external_transaction_reply: Option<String>,
    pub user_notes: Option<String>,
    pub sender_or_receiver_id: Option<i64>,
    pub sender_or_receiver_phone_number: Option<String>,
    pub channel: Option<String>,
    pub service_provider_name: Option<String>,
    pub is_balance_updated: Option<bool>,
    pub source: Option<String>,
    pub destination: Option<String>,
    pub completion_duration: Option<f64>,
    pub recipient_bank: Option<String>,
    pub recipient_bank_account: Option<String>,
    pub cash_out_fee_percentage: Option<f64>,
    pub cash_out_fee_amount: Option<f64>,
    pub slack_notification_sent: Option<bool>,
    pub response_error_message: Option<String>,
    pub response_message: Option<String>,
    pub bank_ref_id: Option<String>,
    pub cycle_id: Option<i32>,
    pub reconciliation_state: Option<bool>,
    pub reconciliation_comment: Option<String>,
    pub reconciliation_date: Option<String>,
}

